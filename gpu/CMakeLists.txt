# This Source Code Form is subject to the terms of the Mozilla Public License,
# v. 2.0. If a copy of the MPL was not distributed with this file, You can
# obtain one at http://mozilla.org/MPL/2.0/.
# 
# 
# Copyright (c) 2016, Lutz, Clemens <lutzcle@cml.li>

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_C_COMPILER clang)
SET(CMAKE_CXX_COMPILER clang++)
SET(CMAKE_EXPORT_COMPILE_COMMANDS 1) # For vim color_coded plugin
PROJECT(GpuBench)

SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${PROJECT_SOURCE_DIR}/cmake")

SET(CL_KERNELS_SOURCE_PATH "${PROJECT_SOURCE_DIR}/cl_kernels")
SET(CL_KERNELS_INSTALL_PATH "${CMAKE_PREFIX_PATH}/opt/${PROJECT_NAME}")

IF(CMAKE_BUILD_TYPE MATCHES Debug)
    SET(CL_KERNELS_PATH ${CL_KERNELS_SOURCE_PATH})
ELSEIF(CMAKE_BUILD_TYPE MATCHES Release OR NOT CMAKE_BUILD_TYPE)
    SET(CL_KERNELS_PATH ${CL_KERNELS_INSTALL_PATH})
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)

SET(CMAKE_CXX_FLAGS "-std=c++11 -O2 -Wall -Wextra -DUNIX")
SET(CMAKE_CXX_FLAGS_DEBUG "-g -DDEBUG")

FIND_PACKAGE(Boost 1.46 REQUIRED COMPONENTS program_options)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

FIND_PACKAGE(OpenCL REQUIRED)
INCLUDE_DIRECTORIES(${OPENCL_INCLUDE_DIRS})

# Inlude CLExt library
FIND_PATH(CLEXT_INCLUDE_DIR clext.hpp
    HINTS "${PROJECT_SOURCE_DIR}/cle" "${CLEXT_PATH}")
FIND_LIBRARY(CLEXT_LIBRARY clext
    HINTS "${PROJECT_SOURCE_DIR}/cle/build" "${CLEXT_PATH}")
SET(CLEXT_LIBRARIES ${CLEXT_LIBRARY} )
SET(CLEXT_INCLUDE_DIRS ${CLEXT_INCLUDE_DIR} )
INCLUDE_DIRECTORIES(${CLEXT_INCLUDE_DIRS})

SET(GPUBENCH_NAME "gpubench")
SET(GPUBENCH_SOURCES
    gpubench.cpp
    common.cpp
    pci_bandwidth.cpp
    )
ADD_EXECUTABLE(gpubench ${GPUBENCH_SOURCES})
TARGET_LINK_LIBRARIES(gpubench ${OPENCL_LIBRARIES} ${Boost_LIBRARIES} ${CLEXT_LIBRARIES})

# Create Version.h file with current git revision string
FIND_PACKAGE(Git)
EXECUTE_PROCESS(
    COMMAND ${GIT_EXECUTABLE} log -1 --format="%H"
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_REVISION
    OUTPUT_STRIP_TRAILING_WHITESPACE
    )
CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/Version.h.in"
    "${PROJECT_BINARY_DIR}/Version.h")

# Create SystemConfig.h file with configuration variables
CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/SystemConfig.h.in"
    "${PROJECT_BINARY_DIR}/SystemConfig.h")
INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")

# Install OpenCL kernel source files
INSTALL(DIRECTORY ${CL_KERNELS_SOURCE_PATH} DESTINATION ${CL_KERNELS_INSTALL_PATH})
